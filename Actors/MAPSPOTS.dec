//Now all TIDs are the same because all that the ACS script does to spawn enemies
//is set the state while the actor does the rest

ACTOR InvasionRestocker
{
	states
	{
	Spawn:
		TNT1 A 1 Thing_ChangeTID (0, 666)
		Loop
	Create:
		TNT1 A 0 A_SetAngle(random(0,359))
		TNT1 A 1 A_SpawnItemEx("ItemFog")
		TNT1 A 0 A_SpawnItemEx("SmokeFog2",random(20,-20), random(20,-20), random(20,-20),0)
		TNT1 A 0 A_SpawnItemEx("SmokeFog1",random(20,-20), random(20,-20), random(20,-20),0)
		TNT1 A 0 A_SpawnItemEx("SmokeFog2",random(20,-20), random(20,-20), random(20,-20),0)
		TNT1 A 0 A_SpawnItemEx("SmokeFog1",random(20,-20), random(20,-20), random(20,-20),0)
		Goto Spawn
	}
}

ACTOR BaseRandomSpot
{
	+INVISIBLE
	+NOINTERACTION
	states
	{
	Spawn:
		TNT1 A 1 NoDelay A_Jump(256, "SpawnItem")
		Wait
	Spawn2:
		//TNT1 A 0 A_SpawnItem("StillSmoke")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckWeaponMonsterCVAR") == 2, "Spawner")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckItemSpawningCVAR") == 2, "NoSpawn")
		TNT1 A 0 A_SpawnItem("Clip")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckItemSpawningCVAR") == 3, "SpawnRestocker")
		Stop
		
	NoSpawn:
		Goto Null
		
	Spawner:
		TNT1 A 0 //A_JumpIf(ACS_NamedExecuteWithResult("CheckIfEnoughSpace", 9) == 0, 1)
		//TNT1 A 0 A_SpawnItem("SmokeSmall")		
		TNT1 A 0 A_SpawnItem("MySpawner")
		Goto Spawn+2
		
	SpawnRestocker:
		TNT1 A 1
		TNT1 A 0 A_SpawnItemEx("InvasionRestocker", 0, 0, 0, 0, 0, 0, 0, 288, 0, 666)
		Stop
	}
}

ACTOR ClipRandomSpot : BaseRandomSpot 2007
{
	states
	{
	SpawnItem:
		TNT1 A 0 A_SpawnItem("Clip")
		Goto Spawn2
	}
}

ACTOR ClipBoxRandomSpot 2048
{
	states
	{
	SpawnItem:
		TNT1 A 0 A_SpawnItemEx("SmokeFog1",random(20,-20), random(20,-20), random(20,-20),0)
		Goto Spawn2
	}
}

ACTOR ShellRandomSpot 2008
{
	states
	{
	SpawnItem:
		TNT1 A 0 A_SpawnItemEx("SmokeFog1",random(20,-20), random(20,-20), random(20,-20),0)
		Goto Spawn2
	}
}

ACTOR ShellBoxRandomSpot 2049
{
	states
	{
	SpawnItem:
		TNT1 A 0 A_SpawnItemEx("SmokeFog1",random(20,-20), random(20,-20), random(20,-20),0)
		Goto Spawn2
	}
}

ACTOR RocketRandomSpot 2010
{
	states
	{
	SpawnItem:
		TNT1 A 0 A_SpawnItemEx("SmokeFog1",random(20,-20), random(20,-20), random(20,-20),0)
		Goto Spawn2
	}
}

ACTOR RocketBoxRandomSpot 2046
{
	states
	{
	SpawnItem:
		//TNT1 A 0 A_SpawnItem("FloorSmoke")	
		TNT1 A 0 A_SpawnItemEx("SmokeFog1",random(20,-20), random(20,-20), random(20,-20),0)
		Goto Spawn2
	}
}

ACTOR WeaponBaseSpot : BaseRandomSpot
{
	states
	{
	SpawnItem:
		//TNT1 A 0 A_SpawnItem("GreenFloorSmoke")
		TNT1 A 0 A_SpawnItem("RanWeppin")
		Goto Spawn2
	}
}

ACTOR CSawRandomSpot : WeaponBaseSpot 2005 {}
ACTOR ShotgunRandomSpot : WeaponBaseSpot 2001 {}
ACTOR SSGRandomSpot : WeaponBaseSpot 82 {}
ACTOR CGunRandomSpot : WeaponBaseSpot 2002 {}
ACTOR RLRandomSpot : WeaponBaseSpot 2003 {}
ACTOR PlasmaRifleRandomSpot : WeaponBaseSpot 2004 {}

ACTOR ZombieRanSpot : MySpawner 3004 {}
ACTOR WolfenRanSpot : MySpawner 84 {}
ACTOR ShotgunnerRanSpot : MySpawner 9 {}
ACTOR ImpRanSpot : MySpawner 3001 {}
ACTOR DemonRanSpot : MySpawner 3002 {}
ACTOR SpectreRanSpot : MySpawner 58 {}
ACTOR ChaingunnerRanSpot : MySpawner 65 {}
ACTOR CacoRanSpot : MySpawner 3005 {}
ACTOR PainRanSpot : MySpawner 71 {}
ACTOR SpideyRanSpot : MySpawner 68 {}
ACTOR RevenantRanSpot : MySpawner 66 {}
ACTOR MancusRanSpot : MySpawner 67 {}
ACTOR HKRanSpot : MySpawner 69 {}

ACTOR MonsterMapSpot : MapSpot
{
	states
	{
	Spawn:
		TNT1 A 1 Thing_ChangeTID (0, 666)
		loop
		
	Create:
		TNT1 A 0 //A_JumpIf(ACS_NamedExecuteWithResult("CheckIfEnoughSpace", 9) == 0, "Null")
		TNT1 A 0 A_SetAngle(random(0,359))
		TNT1 A 0 A_SpawnItem("Teleportfog")
		TNT1 A 0 A_JumpIf(CallACS("CheckSpawnLimitCVAR"), "SpawnOther")
		TNT1 A 0 A_Jump(256, "Create2")
		//TNT1 A 0 A_SpawnItem("ZombieMapSpot") //so that the next wave has duplicated enemies
		Goto Spawn
	
	SpawnOther:
		TNT1 A 0
		TNT1 A 0 A_SpawnItem("Teleportfog")
		TNT1 A 1 A_SpawnItemEx("RanMonster", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}

// Trooper
ACTOR ZombieMapSpot : MonsterMapSpot //3004
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("ZombiemanSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}

// Wolfenstein Soldier
ACTOR WolfenMapSpot : MonsterMapSpot //84
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("WolfensteinSS", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


// Sergeant
ACTOR ShotGuyMapSpot : MonsterMapSpot //9
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("ShotgunGuySpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


// Imp(Doom)
ACTOR ImpMapSpot : MonsterMapSpot //3001
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("ImpSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


// Demon
ACTOR DemonMapSpot : MonsterMapSpot //3002
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("DemonSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


// Partially Invisible Demon
ACTOR SpectreMapSpot : MonsterMapSpot //58
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("SpectreSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


// Chaingunner
ACTOR ChainGuyMapSpot : MonsterMapSpot //65
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("ChaingunGuySpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}

// Cacodemon
ACTOR CacoMapSpot : MonsterMapSpot //3005
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("CacoSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


// Pain Elemental
ACTOR PainElementMapSpot : MonsterMapSpot //71
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("PainSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


// Arachnotron
ACTOR ArachMapSpot : MonsterMapSpot //68
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("ArachnotronSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


// Revenant
ACTOR RevenantMapSpot : MonsterMapSpot //66
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("RevSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


// Mancubus
ACTOR MancubMapSpot : MonsterMapSpot //67
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("FatsoSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


//Hell Knight
ACTOR KnightMapSpot : MonsterMapSpot //69
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("HellKnightSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}


//Baron of Hell
ACTOR BaronMapSpot : MonsterMapSpot 3003
{
	states
	{
	Create2:
		TNT1 A 1 A_SpawnItemEx("BaronSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}

// Archvile
ACTOR ArchMapSpot : MonsterMapSpot 64
{
	states
	{
	Create2:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckBossMonsterCVAR") == 2, "SpawnOther")
		TNT1 A 1 A_SpawnItemEx("ArchvileSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}

//Both of the following monsters don't multiply just because it would be far too
//difficult, but if you are a masochist you can uncomment the spawnitem lines

//Cyberdemon
ACTOR CyberMapSpot : MapSpot 16
{
	states
	{
	Create2:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckBossMonsterCVAR") == 2, "SpawnOther")
		TNT1 A 1 A_SpawnItemEx("CyberSpawner", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}

// Spider Mastermind
ACTOR MastermindMapSpot : MapSpot 7
{
	states
	{
	Create2:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckBossMonsterCVAR") == 2, "SpawnOther")
		TNT1 A 1 A_SpawnItemEx("DETGoreNest", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
		Goto Spawn
	}
}

/*
ACTOR MastermindMapSpot : MapSpot 7
{ 
	states
	{
	spawn:
	TNT1 A 1 Thing_ChangeTID (0, 666)
	loop
	create:
	TNT1 A 0 //A_JumpIf(ACS_NamedExecuteWithResult("CheckIfEnoughSpace", 9) == 0, "Null")
	TNT1 A 0 A_SetAngle(random(0,359))
	TNT1 A 0 //A_JumpIf(ACS_NamedExecuteWithResult("CheckIfEnoughSpace", 4) == 0, "SpawnOther")
	TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckBossMonsterCVAR") == 2, "SpawnOther")
	TNT1 A 1 A_SpawnItem("Teleportfog")
	TNT1 A 1 A_SpawnItemEx("SpiderMastermind", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
	//TNT1 A 0 A_SpawnItem("MastermindMapSpot")
	goto spawn
	SpawnOther:
	TNT1 A 0
	TNT1 A 1 A_SpawnItem("Teleportfog")
	TNT1 A 1 A_SpawnItemEx("RanMonster", 0, 0, 0, 0, 0, 0, 0, 288, 0, 999)
	Stop
	}
}
*/